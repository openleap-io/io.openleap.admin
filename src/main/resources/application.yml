spring:
  application:
    name: admin-ui
  boot:
    admin:
      instance-auth:
        default-user-name: ${spring.security.user.name}
        default-password: ${spring.security.user.password}
      ui:
        brand: "<img src='assets/leaf.png'><span>Interface21.io Admin UI</span>"
        view-settings:
          - name: "about"
            enabled: false
          - name: "journal"
            enabled: true
        title: Interface21.io Admin UI
        login-icon: "assets/leaf.png"
        enable-toasts: true
        theme:
          color: "#72a248"
          palette:
            50: "#72a248"
            100: "#9cda83"
            200: "#6a9f23"
            300: "#68d160"
            400: "#d2d047"
            500: "#afb64a"
            600: "#29cf2d"
            700: "#72a248"
            800: "#356c17"
            900: "#302f24"
          background-enabled: false
        favicon: "assets/leaf.png"
        favicon-danger: "assets/leaf.png"
      client:
        username: ${spring.security.user.name}       #These two are needed so that the client
        password: ${spring.security.user.password}   #can register at the protected server api
        instance:
          metadata:
            user.name: ${spring.security.user.name}         #These two are needed so that the server
            user.password: ${spring.security.user.password} #can access the protected client endpoints
  jmx:
    enabled: true
  main:
    lazy-initialization: false
  security:
    user:
      name: user
      password: sa

owms:
  admin:
    start-page: "/wallboard"
  eureka:
    url: http://user:sa@localhost:8761
    zone: ${owms.eureka.url}/eureka/
  srv:
    hostname: localhost
    protocol: http

server:
  port: ${PORT:8155}

eureka:
  client:
    instance-info-replication-interval-seconds: 10 # default is 30
    registryFetchIntervalSeconds: 5 # SBA
    service-url:
      defaultZone: ${owms.eureka.zone} # Must be camelCase
  instance:
    health-check-url-path: /actuator/health
    hostname: ${owms.srv.hostname}
    # Request a lease with a validity of 5 seconds. If until then the
    # lease has not been renewed, it expires and the Eureka server can evict it.
    # Default: 90s
    lease-expiration-duration-in-seconds: 5

    # The cadence of lease renewal, i.e. how often a heartbeat is sent to Eureka server.
    # In this case every 2 seconds. Use this only for development / debugging. In production use the ...
    # Default: 30s
    lease-renewal-interval-in-seconds: 10
    metadata-map:
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      zone: ${owms.eureka.zone}
      startup: ${random.int}    #needed to trigger info and endpoint update after restart
    non-secure-port-enabled: true
    secure-port-enabled: false
    statusPageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/info
    healthCheckUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/health
    homePageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}${owms.admin.start-page}

info:
  scm-url: "@scm.url@"
  build-url: "https://github.com/spring-labs/@project.artifactId@/actions"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
